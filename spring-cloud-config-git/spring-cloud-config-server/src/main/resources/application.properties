server.port=8001
spring.application.name=spring-cloud-config-server
########################################################################################################################
# GitHub / GitLab
########################################################################################################################
# 配置git仓库的地址
#spring.cloud.config.server.git.uri=https://github.com/acan411/spring-cloud-examples/
## git仓库地址下的相对地址，可以配置多个，用,分割
#spring.cloud.config.server.git.search-paths=config-repo
## git仓库的账号
#spring.cloud.config.server.git.username=
## git仓库的密码
#spring.cloud.config.server.git.password=
########################################################################################################################
# 本地文件系统（Local File System）
########################################################################################################################
spring.profiles.active=native
spring.cloud.config.server.native.searchLocations=file:/D:/project/mine/spring-cloud-examples/spring-cloud-config-git/config-repo
########################################################################################################################
# Classpath（类路径）
########################################################################################################################
#spring.cloud.config.server.native.searchLocations=classpath:/config/
########################################################################################################################
# HashiCorp Vault
# HashiCorp Vault 是一个用于存储和访问密钥、令牌、证书等敏感数据的工具
# Spring Cloud Config 支持通过 Vault 获取加密的配置数据，这对于处理敏感信息（如数据库密码、API 密钥等）非常有用。
########################################################################################################################
#spring.cloud.config.server.vault.uri=https://localhost:8200
#spring.cloud.config.server.vault.backend=secret
#spring.cloud.config.server.vault.defaultContext=application
########################################################################################################################
# JDBC（数据库）
########################################################################################################################
#spring.cloud.config.server.jdbc.sql=SELECT property_value FROM config_table WHERE application=? AND profile=? AND label=?
#spring.cloud.config.server.jdbc.driverClassName=com.mysql.cj.jdbc.Driver
#spring.cloud.config.server.jdbc.url=jdbc:mysql://localhost:3306/configdb
#spring.cloud.config.server.jdbc.username=root
#spring.cloud.config.server.jdbc.password=password
########################################################################################################################
# Consul
# Consul 是 HashiCorp 提供的一个分布式的服务发现和配置管理工具
# Spring Cloud Config 可以将配置存储在 Consul 中，作为一种高可用、分布式的配置存储方案。
########################################################################################################################
#spring.cloud.config.server.consul.host=localhost
#spring.cloud.config.server.consul.port=8500
#spring.cloud.config.server.consul.acl-token=your-consul-token
########################################################################################################################
# ZooKeeper
########################################################################################################################
#spring.cloud.config.server.zookeeper.connect-string=localhost:2181
########################################################################################################################
# Amazon S3
########################################################################################################################
#spring.cloud.config.server.s3.uri=s3://your-bucket-name/config/
########################################################################################################################
# Azure Blob Storage
########################################################################################################################
#spring.cloud.config.server.azure.storageAccountName=your-account-name
#spring.cloud.config.server.azure.storageAccountKey=your-account-key
#spring.cloud.config.server.azure.container=your-container-name
########################################################################################################################
# Etcd
########################################################################################################################
#spring.cloud.config.server.etcd.url=http://localhost:2379